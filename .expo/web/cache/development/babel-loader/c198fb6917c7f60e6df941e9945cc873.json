{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    console.log(posts);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerGallery\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(Text, {\n        style: styles.container\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        }\n      }), React.createElement(View, {\n        style: styles.lico\n      }, item.currentUserLike ? React.createElement(View, {\n        style: styles.viewD\n      }, React.createElement(TouchableOpacity, {\n        style: styles.dis,\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, null, \"DISLIKE\"))) : React.createElement(View, {\n        style: styles.viewL\n      }, React.createElement(TouchableOpacity, {\n        style: styles.like,\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, null, \"LIKE\"))), React.createElement(View, {\n        style: styles.viewC\n      }, React.createElement(TouchableOpacity, {\n        style: styles.commen,\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        }\n      }, React.createElement(Text, null, \"COMMENT\")))));\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  viewC: {\n    width: 170,\n    borderWidth: 1,\n    borderColor: 'red',\n    margin: 5\n  },\n  viewL: {\n    width: 170,\n    borderWidth: 1,\n    borderColor: 'red',\n    margin: 5\n  },\n  viewD: {\n    margin: 5,\n    width: 170,\n    borderWidth: 1,\n    borderColor: 'red'\n  },\n  lico: {\n    flexDirection: 'row'\n  },\n  commen: {\n    backgroundColor: 'orange',\n    height: 50,\n    borderRadius: 10\n  },\n  dis: {\n    borderRadius: 10,\n    backgroundColor: 'pink',\n    height: 50\n  },\n  like: {\n    borderRadius: 10,\n    backgroundColor: 'blue',\n    height: 50\n  },\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Donal/Desktop/newapp/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","posts","setPosts","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","onDislikePress","delete","styles","container","containerGallery","item","containerImage","user","name","image","uri","downloadURL","lico","currentUserLike","viewD","dis","id","viewL","like","viewC","commen","navigation","navigate","StyleSheet","create","width","borderWidth","borderColor","margin","flexDirection","backgroundColor","height","borderRadius","flex","containerInfo","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button, TouchableOpacity } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n        console.log(posts)\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n                            <Text style={styles.container}>{item.user.name}</Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            <View style={styles.lico}>\n                                {item.currentUserLike ?\n                                    (\n                                        <View style={styles.viewD}>\n                                            <TouchableOpacity\n                                                style={styles.dis}\n                                                onPress={() => onDislikePress(item.user.uid, item.id)}>\n                                                <Text>DISLIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                    :\n                                    (\n                                        <View style={styles.viewL}>\n                                            <TouchableOpacity\n                                                style={styles.like}\n                                                onPress={() => onLikePress(item.user.uid, item.id)}>\n                                                <Text>LIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                }\n\n                                <View style={styles.viewC}>\n                                    <TouchableOpacity\n                                        style={styles.commen}\n                                        onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}\n                                    >\n                                        <Text>COMMENT</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    viewC: {\n        width: 170,\n        borderWidth: 1,\n        borderColor: 'red',\n        margin: 5,\n        \n    },\n    viewL: {\n        width: 170,\n        borderWidth: 1,\n        borderColor: 'red',\n        margin: 5,\n    },\n    viewD: {\n        margin: 5,\n        width: 170,\n        borderWidth: 1,\n        borderColor: 'red',\n    },\n\n    lico: {\n        flexDirection: 'row',\n    },\n    commen: {\n        backgroundColor: 'orange',\n        height: 50,\n        borderRadius: 10,\n    },\n    dis: {\n        borderRadius: 10,\n        backgroundColor: 'pink',\n        height: 50,\n    },\n    like: {\n        borderRadius: 10,\n        backgroundColor: 'blue',\n        height: 50,\n    },\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}