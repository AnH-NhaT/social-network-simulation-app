{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    console.log(posts);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerGallery\n  }, React.createElement(FlatList, {\n    style: {\n      height: 3\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(View, {\n        style: styles.avatar\n      }, React.createElement(View, {\n        style: styles.circle\n      }, React.createElement(Text, {\n        style: styles.img\n      }, \"IMG\")), React.createElement(View, {\n        style: styles.nameA\n      }, React.createElement(Text, {\n        style: styles.inNameA\n      }, item.user.name))), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        }\n      }), React.createElement(View, {\n        style: styles.lico\n      }, item.currentUserLike ? React.createElement(View, {\n        style: styles.viewD\n      }, React.createElement(TouchableOpacity, {\n        style: styles.dis,\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"DISLIKE\"))) : React.createElement(View, {\n        style: styles.viewL\n      }, React.createElement(TouchableOpacity, {\n        style: styles.like,\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"LIKE\"))), React.createElement(View, {\n        style: styles.viewC\n      }, React.createElement(TouchableOpacity, {\n        style: styles.commen,\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"COMMENT\")))), React.createElement(View, {\n        style: styles.split\n      }));\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  split: {\n    marginTop: 5,\n    backgroundColor: 'gray',\n    height: 12\n  },\n  textt: {\n    fontWeight: 'bold',\n    color: '#00bfff'\n  },\n  viewC: {\n    width: 170,\n    margin: 5\n  },\n  viewL: {\n    width: 170,\n    margin: 5\n  },\n  viewD: {\n    margin: 5,\n    width: 170\n  },\n  lico: {\n    flexDirection: 'row'\n  },\n  commen: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#00bfff',\n    height: 50,\n    borderRadius: 10\n  },\n  dis: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    backgroundColor: 'white',\n    borderColor: '#00bfff',\n    borderWidth: 1,\n    height: 50\n  },\n  like: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    borderColor: '#00bfff',\n    backgroundColor: 'white',\n    borderWidth: 1,\n    height: 50\n  },\n  img: {\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  avatar: {\n    flexDirection: 'row'\n  },\n  inNameA: {\n    fontSize: 25,\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    width: 285\n  },\n  nameA: {\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5,\n    marginLeft: 0\n  },\n  circle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: 50,\n    height: 50,\n    width: 50,\n    margin: 7,\n    borderColor: 'red'\n  },\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {},\n  image: {\n    borderRadius: 10,\n    marginLeft: 5,\n    marginRight: 5,\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Donal/Desktop/newapp/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","refreshing","setRefreshing","onRefresh","useCallback","wait","then","posts","setPosts","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","onDislikePress","delete","styles","container","containerGallery","height","item","containerImage","avatar","circle","img","nameA","inNameA","user","name","image","uri","downloadURL","lico","currentUserLike","viewD","dis","id","textt","viewL","like","viewC","commen","navigation","navigate","split","StyleSheet","create","marginTop","backgroundColor","fontWeight","color","width","margin","flexDirection","alignItems","justifyContent","borderWidth","borderColor","borderRadius","fontSize","fontStyle","marginLeft","flex","containerInfo","marginRight","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, TouchableOpacity, RefreshControl } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\n\n\nfunction Feed(props) {\n\n\n    const [refreshing, setRefreshing] = React.useState(false);\n    const onRefresh = React.useCallback(() => {\n        setRefreshing(true);\n        wait(2000).then(() => setRefreshing(false));\n    }, []);\n\n\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n        console.log(posts)\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    style={{ height: 3, }}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={refreshing}\n                            onRefresh={onRefresh}\n                        />\n                    }\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n\n                            <View style={styles.avatar}>\n                                <View style={styles.circle}>\n                                    <Text style={styles.img}>IMG</Text>\n                                </View>\n                                <View style={styles.nameA}>\n                                    <Text style={styles.inNameA}>{item.user.name}</Text>\n                                </View>\n                            </View>\n\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n\n                            <View style={styles.lico}>\n\n                                {item.currentUserLike ?\n                                    (\n                                        <View style={styles.viewD}>\n                                            <TouchableOpacity\n                                                style={styles.dis}\n                                                onPress={() => onDislikePress(item.user.uid, item.id)}>\n                                                <Text style={styles.textt}>DISLIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                    :\n                                    (\n                                        <View style={styles.viewL}>\n                                            <TouchableOpacity\n                                                style={styles.like}\n                                                onPress={() => onLikePress(item.user.uid, item.id)}>\n                                                <Text style={styles.textt}>LIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                }\n\n                                <View style={styles.viewC}>\n                                    <TouchableOpacity\n                                        style={styles.commen}\n                                        onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}\n                                    >\n                                        <Text style={styles.textt}>COMMENT</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n\n                            <View style={styles.split}></View>\n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    split: {\n        marginTop: 5,\n        backgroundColor: 'gray',\n        height: 12,\n    },\n    textt: {\n        fontWeight: 'bold',\n        color: '#00bfff',\n    },\n    viewC: {\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n        margin: 5,\n    },\n    viewL: {\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n        margin: 5,\n    },\n    viewD: {\n        margin: 5,\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n    },\n\n    lico: {\n        flexDirection: 'row',\n    },\n    commen: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderWidth: 1,\n        borderColor: '#00bfff',\n        height: 50,\n        borderRadius: 10,\n    },\n    dis: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        backgroundColor: 'white',\n        borderColor: '#00bfff',\n        borderWidth: 1,\n        height: 50,\n    },\n    like: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        borderColor: '#00bfff',\n        backgroundColor: 'white',\n        borderWidth: 1,\n        height: 50,\n    },\n    img: {\n        color: 'green',\n        fontWeight: 'bold',\n    },\n    avatar: {\n        flexDirection: 'row',\n    },\n    inNameA: {\n        fontSize: 25,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n        width: 285,\n        // color:'blue',\n    },\n    nameA: {\n        height: 50,\n        // borderWidth: 2,\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 5,\n        marginLeft: 0,\n    },\n    circle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 2,\n        borderRadius: 50,\n        height: 50,\n        width: 50,\n        margin: 7,\n        borderColor: 'red',\n    },\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        // flex: 1 / 3\n    },\n    image: {\n        borderRadius: 10,\n        marginLeft: 5,\n        marginRight: 5,\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}