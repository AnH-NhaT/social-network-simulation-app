{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reload } from \"../../redux/actions/index\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nfunction Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var _onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      setRefreshing(false);\n    });\n  }, []);\n\n  useEffect(function () {\n    function matchUserToComment(comments) {\n      var _loop = function _loop(i) {\n        if (comments[i].hasOwnProperty('user')) {\n          return \"continue\";\n        }\n\n        var user = props.users.find(function (x) {\n          return x.uid === comments[i].creator;\n        });\n\n        if (user == undefined) {\n          props.fetchUsersData(comments[i].creator, false);\n        } else {\n          comments[i].user = user;\n        }\n      };\n\n      for (var i = 0; i < comments.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      setComments(comments);\n    }\n\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  }, [props.route.params.postId, props.users]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').add({\n      creator: firebase.auth().currentUser.uid,\n      text: text\n    });\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').get().then(function (snapshot) {\n      var comments = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setComments(comments);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.inline\n  }, React.createElement(View, {\n    style: styles.input\n  }, React.createElement(TextInput, {\n    style: {\n      marginLeft: 10\n    },\n    placeholder: \"Write your comments\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.send,\n    onPress: function onPress() {\n      onCommentSend();\n      props.reload();\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  }, \"SEND\"))), React.createElement(FlatList, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        _onRefresh;\n        props.reload();\n      }\n    }),\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.row\n      }, item.user !== undefined ? React.createElement(View, {\n        style: styles.circle\n      }, React.createElement(Text, {\n        style: styles.img\n      }, item.user.name)) : null, React.createElement(View, {\n        style: styles.show\n      }, React.createElement(Text, null, item.text)));\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {},\n  show: {\n    justifyContent: 'center',\n    marginLeft: 20\n  },\n  row: {\n    borderStartWidth: 0,\n    borderWidth: 1,\n    marginTop: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    flexDirection: 'row',\n    borderRadius: 50,\n    borderColor: 'green'\n  },\n  circle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: 50,\n    padding: 9,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderColor: 'red'\n  },\n  img: {\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  inline: {\n    flexDirection: 'row'\n  },\n  input: {\n    marginTop: 10,\n    marginLeft: 10,\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#00bfff',\n    height: 50,\n    borderRadius: 40,\n    width: 266\n  },\n  send: {\n    marginTop: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#00bfff',\n    borderWidth: 1,\n    borderColor: '#00bfff',\n    height: 50,\n    borderRadius: 70,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    reload: reload,\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);","map":{"version":3,"sources":["C:/Users/Donal/Desktop/New/newapp/frontend/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","fetchUsersData","connect","bindActionCreators","reload","wait","timeout","Promise","resolve","setTimeout","Comment","props","comments","setComments","postId","setPostId","text","setText","refreshing","setRefreshing","onRefresh","useCallback","then","matchUserToComment","i","hasOwnProperty","user","users","find","x","uid","creator","undefined","length","route","params","firestore","collection","doc","get","snapshot","docs","map","data","id","onCommentSend","add","auth","currentUser","styles","container","inline","input","marginLeft","send","color","fontWeight","item","row","circle","img","name","show","StyleSheet","create","justifyContent","borderStartWidth","borderWidth","marginTop","marginRight","flexDirection","borderRadius","borderColor","alignItems","padding","paddingLeft","paddingRight","backgroundColor","height","width","mapStateToProps","store","usersState","userState","following","feed","usersFollowingLoaded","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, RefreshControl, FlatList, TextInput, StyleSheet, TouchableOpacity } from 'react-native'\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { fetchUsersData } from '../../redux/actions/index'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport { reload } from '../../redux/actions/index';\n\nconst wait = (timeout) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n}\n\nfunction Comment(props) {\n    const [comments, setComments] = useState([])\n    const [postId, setPostId] = useState(\"\")\n    const [text, setText] = useState(\"\")\n    const [refreshing, setRefreshing] = React.useState(false);\n    const onRefresh = React.useCallback(() => {\n        setRefreshing(true);\n        wait(2000).then(() => {\n            setRefreshing(false)\n        });\n    }, []);\n    useEffect(() => {\n\n        function matchUserToComment(comments) {\n            for (let i = 0; i < comments.length; i++) {\n                if (comments[i].hasOwnProperty('user')) {\n                    continue;\n                }\n\n                const user = props.users.find(x => x.uid === comments[i].creator)\n                if (user == undefined) {\n                    props.fetchUsersData(comments[i].creator, false)\n                } else {\n                    comments[i].user = user\n                }\n            }\n            setComments(comments)\n        }\n\n        if (props.route.params.postId !== postId) {\n            firebase.firestore()\n                .collection('posts')\n                .doc(props.route.params.uid)\n                .collection('userPosts')\n                .doc(props.route.params.postId)\n                .collection('comments')\n                .get()\n                .then((snapshot) => {\n                    let comments = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    matchUserToComment(comments)\n                })\n            setPostId(props.route.params.postId)\n        } else {\n            matchUserToComment(comments)\n        }\n    }, [props.route.params.postId, props.users])\n\n\n    const onCommentSend = () => {\n        firebase.firestore()\n            .collection('posts')\n            .doc(props.route.params.uid)\n            .collection('userPosts')\n            .doc(props.route.params.postId)\n            .collection('comments')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text\n            });\n            \n        firebase.firestore()\n            .collection('posts')\n            .doc(props.route.params.uid)\n            .collection('userPosts')\n            .doc(props.route.params.postId)\n            .collection('comments')\n            .get()\n            .then((snapshot) => {\n                let comments = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                })\n                setComments(comments)\n            });\n    }\n\n    return (\n        <View style={styles.container}>\n            < View style={styles.inline} >\n                <View style={styles.input}>\n                    <TextInput\n                        style={{ marginLeft: 10 }}\n                        placeholder='Write your comments'\n                        onChangeText={(text) => setText(text)} />\n                </View>\n\n                <TouchableOpacity\n                    style={styles.send}\n                    onPress={() => {\n                        onCommentSend()\n                        props.reload()\n                    }}>\n                    <Text style={{ color: 'white', fontWeight: 'bold' }}>SEND</Text>\n                </TouchableOpacity>\n            </View >\n            <FlatList\n                refreshControl={\n                    <RefreshControl\n                        refreshing={refreshing}\n                        onRefresh={() => {\n                            onRefresh\n                            props.reload()\n                        }} />}\n                numColumns={1}\n                horizontal={false}\n                data={comments}\n                renderItem={({ item }) => (\n                    <View style={styles.row}>\n                        {item.user !== undefined ?\n                            <View style={styles.circle}>\n                                <Text style={styles.img}>\n                                    {item.user.name}\n                                </Text>\n                            </View>\n\n                            :\n\n                            null}\n\n                        <View style={styles.show}>\n                            <Text>{item.text}</Text>\n                        </View>\n\n                    </View>\n                )} />\n        </View >\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        // backgroundColor:'white',\n    },\n    show: {\n        justifyContent: 'center',\n        marginLeft: 20,\n    },\n    row: {\n        borderStartWidth: 0,\n        borderWidth: 1,\n        marginTop: 10,\n        marginLeft: 10,\n        marginRight: 10,\n        flexDirection: 'row',\n        borderRadius: 50,\n        borderColor: 'green',\n    },\n    circle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 2,\n        borderRadius: 50,\n        padding: 9,\n        paddingLeft: 15,\n        paddingRight: 15,\n        borderColor: 'red',\n    },\n    img: {\n        color: 'green',\n        fontWeight: 'bold',\n    },\n    inline: {\n        flexDirection: 'row',\n    },\n    input: {\n        marginTop: 10,\n        marginLeft: 10,\n        // alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderWidth: 1,\n        borderColor: '#00bfff',\n        height: 50,\n        borderRadius: 40,\n        width: 266,\n    },\n    send: {\n        marginTop: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#00bfff',\n        borderWidth: 1,\n        borderColor: '#00bfff',\n        height: 50,\n        borderRadius: 70,\n        // width: 50,\n        paddingLeft: 15,\n        paddingRight: 15,\n        marginLeft: 5,\n    },\n});\n\nconst mapStateToProps = (store) => ({\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ reload, fetchUsersData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);\n"]},"metadata":{},"sourceType":"module"}