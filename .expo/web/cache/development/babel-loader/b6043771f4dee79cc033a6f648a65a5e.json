{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBqSGDnkR54ZJG85_yhegBz7y65Jy8orSs\",\n  authDomain: \"instagram-5ee80.firebaseapp.com\",\n  projectId: \"instagram-5ee80\",\n  storageBucket: \"instagram-5ee80.appspot.com\",\n  messagingSenderId: \"1034450005301\",\n  appId: \"1:1034450005301:web:b672317240e26ceb9a707c\",\n  measurementId: \"G-PCN31T38H6\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: styles.wrap\n        }, React.createElement(View, {\n          style: styles.viewTop\n        }, React.createElement(Text, {\n          style: styles.name\n        }, \"TRUTH\"), React.createElement(Text, {\n          style: styles.name\n        }, \"Social\")));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\"\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\"\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          title: \"THE TRUTH\",\n          headerStyle: {\n            backgroundColor: '#e6ffff'\n          },\n          headerTintColor: '#1a75ff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n            width: 180,\n            fontSize: 30,\n            fontFamily: 'serif'\n          }\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nvar styles = StyleSheet.create({\n  wrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  viewTop: {},\n  name: {\n    fontSize: 100,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: 'cyan'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Donal/Desktop/newapp/frontend/App.js"],"names":["React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","SaveScreen","CommentScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","styles","wrap","viewTop","name","headerShown","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontStyle","width","fontSize","fontFamily","navigation","StyleSheet","create","alignItems","justifyContent","flex","textAlign","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { View, Text, StyleSheet } from 'react-native'\n\nimport firebase from 'firebase'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqSGDnkR54ZJG85_yhegBz7y65Jy8orSs\",\n  authDomain: \"instagram-5ee80.firebaseapp.com\",\n  projectId: \"instagram-5ee80\",\n  storageBucket: \"instagram-5ee80.appspot.com\",\n  messagingSenderId: \"1034450005301\",\n  appId: \"1:1034450005301:web:b672317240e26ceb9a707c\",\n  measurementId: \"G-PCN31T38H6\"\n};\n\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LandingScreen from './components/auth/Landing'\nimport RegisterScreen from './components/auth/Register'\nimport LoginScreen from './components/auth/Login'\nimport MainScreen from './components/Main'\nimport AddScreen from './components/main/Add'\nimport SaveScreen from './components/main/Save'\nimport CommentScreen from './components/main/Comment'\n\n\nconst Stack = createStackNavigator();\n\n\nexport class App extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return (\n        <View style={styles.wrap}>\n          <View style={styles.viewTop}>\n            <Text style={styles.name}>TRUTH</Text>\n            <Text style={styles.name}>Social</Text>\n          </View>\n        </View >\n      )\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Landing\">\n            <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <NavigationContainer >\n          <Stack.Navigator initialRouteName=\"Main\" >\n            <Stack.Screen name=\"Main\" component={MainScreen} \n            options={{ title: \"THE TRUTH\",\n            headerStyle: {\n              backgroundColor: '#e6ffff',\n            },\n            headerTintColor: '#1a75ff',\n            headerTitleStyle: {\n              fontWeight: 'bold',\n              fontStyle:'italic',\n              width:180,\n              fontSize:30,\n              fontFamily:'serif',\n              \n            },\n            }} />\n            <Stack.Screen name=\"Add\" component={AddScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation} />\n            <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={this.props.navigation} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  viewTop: {\n    \n  },\n  name: {\n    fontSize: 100,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: 'cyan',\n  },\n})\nexport default App\n"]},"metadata":{},"sourceType":"module"}