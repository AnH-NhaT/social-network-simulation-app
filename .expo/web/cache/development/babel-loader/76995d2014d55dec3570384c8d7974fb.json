{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    console.log(posts);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerGallery\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(Text, {\n        style: styles.container\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        }\n      }), item.currentUserLike ? React.createElement(TouchableOpacity, {\n        style: styles.dis,\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, null, \"DISLIKE\")) : React.createElement(TouchableOpacity, {\n        style: styles.like,\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, null, \"LIKE\")), React.createElement(TouchableOpacity, {\n        style: styles.com\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        }\n      }, \"View Comments...\"));\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  dis: {\n    backgroundColor: 'pink',\n    height: 50,\n    width: 180\n  },\n  like: {\n    backgroundColor: 'blue',\n    height: 50,\n    width: 180\n  },\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Donal/Desktop/newapp/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","posts","setPosts","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","onDislikePress","delete","styles","container","containerGallery","item","containerImage","user","name","image","uri","downloadURL","currentUserLike","dis","id","like","com","navigation","navigate","StyleSheet","create","backgroundColor","height","width","flex","containerInfo","margin","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,KAAK,CAACG,oBAAN,IAA8BH,KAAK,CAACI,SAAN,CAAgBC,MAA9C,IAAwDL,KAAK,CAACI,SAAN,CAAgBC,MAAhB,KAA2B,CAAvF,EAA0F;AACtFL,MAAAA,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC5B,eAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAtB;AACH,OAFD;AAGAR,MAAAA,QAAQ,CAACF,KAAK,CAACM,IAAP,CAAR;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEH,GATQ,EASN,CAACD,KAAK,CAACG,oBAAP,EAA6BH,KAAK,CAACM,IAAnC,CATM,CAAT;;AAWA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,MAAT,EAAoB;AACpCnB,IAAAA,QAAQ,CAACoB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESJ,MAFT,EAGKG,UAHL,CAGgB,WAHhB,EAIKC,GAJL,CAISH,MAJT,EAKKE,UALL,CAKgB,OALhB,EAMKC,GANL,CAMStB,QAAQ,CAACuB,IAAT,GAAgBC,WAAhB,CAA4BC,GANrC,EAOKC,GAPL,CAOS,EAPT;AAQH,GATD;;AAUA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACT,MAAD,EAASC,MAAT,EAAoB;AACvCnB,IAAAA,QAAQ,CAACoB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESJ,MAFT,EAGKG,UAHL,CAGgB,WAHhB,EAIKC,GAJL,CAISH,MAJT,EAKKE,UALL,CAKgB,OALhB,EAMKC,GANL,CAMStB,QAAQ,CAACuB,IAAT,GAAgBC,WAAhB,CAA4BC,GANrC,EAOKG,MAPL;AAQH,GATD;;AAUA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,UAAU,EAAE,KAFhB;AAGI,IAAA,IAAI,EAAE1B,KAHV;AAII,IAAA,UAAU,EAAE;AAAA,UAAG2B,IAAH,QAAGA,IAAH;AAAA,aACR,oBAAC,IAAD;AACI,QAAA,KAAK,EAAEH,MAAM,CAACI;AADlB,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACC;AAApB,SAAgCE,IAAI,CAACE,IAAL,CAAUC,IAA1C,CAFJ,EAGI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEN,MAAM,CAACO,KADlB;AAEI,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEL,IAAI,CAACM;AAAZ;AAFZ,QAHJ,EAOKN,IAAI,CAACO,eAAL,GAEO,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEV,MAAM,CAACW,GADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMb,cAAc,CAACK,IAAI,CAACE,IAAL,CAAUT,GAAX,EAAgBO,IAAI,CAACS,EAArB,CAApB;AAAA;AAFb,SAGI,oBAAC,IAAD,kBAHJ,CAFP,GAUO,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEZ,MAAM,CAACa,IADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMzB,WAAW,CAACe,IAAI,CAACE,IAAL,CAAUT,GAAX,EAAgBO,IAAI,CAACS,EAArB,CAAjB;AAAA;AAFb,SAGI,oBAAC,IAAD,eAHJ,CAjBZ,EAwBI,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAEZ,MAAM,CAACc;AADd,QAxBJ,EA6BI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMvC,KAAK,CAACwC,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AAAE1B,YAAAA,MAAM,EAAEa,IAAI,CAACS,EAAf;AAAmBhB,YAAAA,GAAG,EAAEO,IAAI,CAACE,IAAL,CAAUT;AAAlC,WAArC,CAAN;AAAA;AADb,4BA7BJ,CADQ;AAAA;AAJhB,IADJ,CADJ,CADJ;AAkDH;;AAED,IAAMI,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,GAAG,EAAE;AACDQ,IAAAA,eAAe,EAAE,MADhB;AAEDC,IAAAA,MAAM,EAAE,EAFP;AAGDC,IAAAA,KAAK,EAAE;AAHN,GADwB;AAM7BR,EAAAA,IAAI,EAAE;AACFM,IAAAA,eAAe,EAAE,MADf;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,KAAK,EAAE;AAHL,GANuB;AAW7BpB,EAAAA,SAAS,EAAE;AACPqB,IAAAA,IAAI,EAAE;AADC,GAXkB;AAc7BC,EAAAA,aAAa,EAAE;AACXC,IAAAA,MAAM,EAAE;AADG,GAdc;AAiB7BtB,EAAAA,gBAAgB,EAAE;AACdoB,IAAAA,IAAI,EAAE;AADQ,GAjBW;AAoB7BlB,EAAAA,cAAc,EAAE;AACZkB,IAAAA,IAAI,EAAE,IAAI;AADE,GApBa;AAwB7Bf,EAAAA,KAAK,EAAE;AACHe,IAAAA,IAAI,EAAE,CADH;AAEHG,IAAAA,WAAW,EAAE,IAAI;AAFd;AAxBsB,CAAlB,CAAf;;AA6BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChChC,IAAAA,WAAW,EAAEgC,KAAK,CAACC,SAAN,CAAgBjC,WADG;AAEhChB,IAAAA,SAAS,EAAEgD,KAAK,CAACC,SAAN,CAAgBjD,SAFK;AAGhCE,IAAAA,IAAI,EAAE8C,KAAK,CAACE,UAAN,CAAiBhD,IAHS;AAIhCH,IAAAA,oBAAoB,EAAEiD,KAAK,CAACE,UAAN,CAAiBnD;AAJP,GAAZ;AAAA,CAAxB;;AAQA,eAAeL,OAAO,CAACqD,eAAD,EAAkB,IAAlB,CAAP,CAA+BpD,IAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button, TouchableOpacity } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n        console.log(posts)\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n                            <Text style={styles.container}>{item.user.name}</Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            {item.currentUserLike ?\n                                (\n                                    <TouchableOpacity\n                                        style={styles.dis}\n                                        onPress={() => onDislikePress(item.user.uid, item.id)}>\n                                        <Text>DISLIKE</Text>\n                                    </TouchableOpacity>\n                                )\n                                :\n                                (\n                                    <TouchableOpacity\n                                        style={styles.like}\n                                        onPress={() => onLikePress(item.user.uid, item.id)}>\n                                        <Text>LIKE</Text>\n                                    </TouchableOpacity>\n                                )\n                            }\n                            <TouchableOpacity\n                            style={styles.com}\n                            >\n\n                            </TouchableOpacity>\n                            <Text\n                                onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}>\n                                View Comments...\n                            </Text>\n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    dis: {\n        backgroundColor: 'pink',\n        height: 50,\n        width: 180,\n    },\n    like: {\n        backgroundColor: 'blue',\n        height: 50,\n        width: 180,\n    },\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}