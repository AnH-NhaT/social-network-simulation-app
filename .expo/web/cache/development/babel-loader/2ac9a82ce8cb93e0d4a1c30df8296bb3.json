{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    console.log(posts);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerGallery\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(View, {\n        style: styles.avatar\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        }\n      })), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        }\n      }), React.createElement(View, {\n        style: styles.lico\n      }, item.currentUserLike ? React.createElement(View, {\n        style: styles.viewD\n      }, React.createElement(TouchableOpacity, {\n        style: styles.dis,\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"DISLIKE\"))) : React.createElement(View, {\n        style: styles.viewL\n      }, React.createElement(TouchableOpacity, {\n        style: styles.like,\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"LIKE\"))), React.createElement(View, {\n        style: styles.viewC\n      }, React.createElement(TouchableOpacity, {\n        style: styles.commen,\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        }\n      }, React.createElement(Text, {\n        style: styles.textt\n      }, \"COMMENT\")))), React.createElement(View, {\n        style: styles.split\n      }));\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  split: {\n    marginTop: 5,\n    backgroundColor: '#b8b894',\n    height: 10\n  },\n  textt: {\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  viewC: {\n    width: 170,\n    margin: 5\n  },\n  viewL: {\n    width: 170,\n    margin: 5\n  },\n  viewD: {\n    margin: 5,\n    width: 170\n  },\n  lico: {\n    flexDirection: 'row'\n  },\n  commen: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#00bfff',\n    height: 50,\n    borderRadius: 10\n  },\n  dis: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    backgroundColor: '#00bfff',\n    height: 50\n  },\n  like: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n    backgroundColor: '#00bfff',\n    height: 50\n  },\n  img: {\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  avatar: {\n    flexDirection: 'row'\n  },\n  inNameA: {\n    fontSize: 25,\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    width: 285\n  },\n  nameA: {\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5,\n    marginLeft: 0\n  },\n  circle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: 50,\n    height: 50,\n    width: 50,\n    margin: 7,\n    borderColor: 'red'\n  },\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {},\n  image: {\n    borderRadius: 10,\n    marginLeft: 5,\n    marginRight: 5,\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Donal/Desktop/newapp/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","posts","setPosts","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","onDislikePress","delete","styles","container","containerGallery","item","containerImage","avatar","navigation","navigate","id","image","uri","downloadURL","lico","currentUserLike","viewD","dis","user","textt","viewL","like","viewC","commen","split","StyleSheet","create","marginTop","backgroundColor","height","fontWeight","color","width","margin","flexDirection","alignItems","justifyContent","borderRadius","img","inNameA","fontSize","fontStyle","nameA","marginLeft","circle","borderWidth","borderColor","flex","containerInfo","marginRight","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button, TouchableOpacity } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n        console.log(posts)\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n                            <View style={styles.avatar}>\n                                <TouchableOpacity\n                                    onPress={() => props.navigation.navigate(\"Profile\", { uid: item.id })}>\n\n                                </TouchableOpacity>\n                            </View>\n\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            <View style={styles.lico}>\n                                {item.currentUserLike ?\n                                    (\n                                        <View style={styles.viewD}>\n                                            <TouchableOpacity\n                                                style={styles.dis}\n                                                onPress={() => onDislikePress(item.user.uid, item.id)}>\n                                                <Text style={styles.textt}>DISLIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                    :\n                                    (\n                                        <View style={styles.viewL}>\n                                            <TouchableOpacity\n                                                style={styles.like}\n                                                onPress={() => onLikePress(item.user.uid, item.id)}>\n                                                <Text style={styles.textt}>LIKE</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                    )\n                                }\n\n                                <View style={styles.viewC}>\n                                    <TouchableOpacity\n                                        style={styles.commen}\n                                        onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}\n                                    >\n                                        <Text style={styles.textt}>COMMENT</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                            <View style={styles.split}></View>\n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    split: {\n        marginTop: 5,\n        backgroundColor: '#b8b894',\n        height: 10,\n    },\n    textt: {\n        fontWeight: 'bold',\n        color: '#fff',\n    },\n    viewC: {\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n        margin: 5,\n    },\n    viewL: {\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n        margin: 5,\n    },\n    viewD: {\n        margin: 5,\n        width: 170,\n        // borderWidth: 1,\n        // borderColor: 'red',\n    },\n\n    lico: {\n        flexDirection: 'row',\n    },\n    commen: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#00bfff',\n        height: 50,\n        borderRadius: 10,\n    },\n    dis: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        backgroundColor: '#00bfff',\n        height: 50,\n    },\n    like: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        backgroundColor: '#00bfff',\n        height: 50,\n    },\n    img: {\n        color: 'green',\n        fontWeight: 'bold',\n    },\n    avatar: {\n        flexDirection: 'row',\n    },\n    inNameA: {\n        fontSize: 25,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n        width: 285,\n        // color:'blue',\n    },\n    nameA: {\n        height: 50,\n        // borderWidth: 2,\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 5,\n        marginLeft: 0,\n    },\n    circle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 2,\n        borderRadius: 50,\n        height: 50,\n        width: 50,\n        margin: 7,\n        borderColor: 'red',\n    },\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        // flex: 1 / 3\n    },\n    image: {\n        borderRadius: 10,\n        marginLeft: 5,\n        marginRight: 5,\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}